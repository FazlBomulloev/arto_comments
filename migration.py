# migration_add_recovery_fields.py
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –ë–î
"""

import asyncio
from sqlalchemy import text
from src.db import get_session

async def run_migration():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
    
    migration_queries = [
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        """
        ALTER TABLE accounts 
        ADD COLUMN IF NOT EXISTS last_error TEXT;
        """,
        """
        ALTER TABLE accounts 
        ADD COLUMN IF NOT EXISTS last_error_time TIMESTAMP;
        """,
        """
        ALTER TABLE accounts 
        ADD COLUMN IF NOT EXISTS next_check_time TIMESTAMP;
        """,
        """
        ALTER TABLE accounts 
        ADD COLUMN IF NOT EXISTS total_fails INTEGER DEFAULT 0;
        """,
        """
        ALTER TABLE accounts 
        ADD COLUMN IF NOT EXISTS pause_reason VARCHAR(50);
        """,
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        """
        UPDATE accounts 
        SET total_fails = 0 
        WHERE total_fails IS NULL;
        """
    ]
    
    async with get_session() as session:
        try:
            for query in migration_queries:
                print(f"–í—ã–ø–æ–ª–Ω—è–µ–º: {query.strip()}")
                await session.execute(text(query))
            
            await session.commit()
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            raise

if __name__ == "__main__":
    print("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    asyncio.run(run_migration())